plugins {
    id 'org.springframework.boot' version '2.7.2'
    id 'io.spring.dependency-management' version '1.0.12.RELEASE'
    id 'java'
    id 'war' //[war packaging]
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

//== [s] [war packaging]
bootWar.archiveName("ROOT.war")
war.archiveName("ROOT.war")
//== [e] [war packaging]

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //== core
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat' //[war packaging]


    //== db
    runtimeOnly 'mysql:mysql-connector-java'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:1.16'

    //== tools
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    //== test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}



/*
 [bootBuildImage]
 */
def docker_id = "mr838wind"
def docker_token = "dckr_pat_n1VDrHfWBgnsY33hcyus7dwZqGA"
tasks.named("bootBuildImage") {
    imageName = "${docker_id}/${project.name}"
    publish = true
    docker {
        publishRegistry {
            username = "${docker_id}"
            password = "${docker_token}"
        }
    }
}

